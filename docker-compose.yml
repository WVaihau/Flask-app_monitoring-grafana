version: '3.8'

networks:
 monitoring:
  driver: bridge


volumes:
 prometheus_data: {}
 grafana_data: {}


services:

 node-exporter:
  image: prom/node-exporter:latest
  container_name: node-exporter
  restart: unless-stopped
  volumes:
   - /proc:/host/proc:ro
   - /sys:/host/sys:ro
   - /:/rootfs:ro
  command:
   - '--path.procfs=/host/proc'
   - '--path.rootfs=/rootfs'
   - '--path.sysfs=/host/sys'
   - '--collector.filesystem.mount-points-exclude=\
    ^/(sys|proc|dev|host|etc)($$|/)'
  expose:
   - 9100
  ports:
   - 9100:9100
  networks:
   - monitoring

 prometheus:
  image: prom/prometheus:latest
  container_name: prometheus
  restart: unless-stopped
  volumes:
   - ./prometheus.yml:/etc/prometheus/prometheus.yml
   - ./prometheus_data:/prometheus
  command:
   - '--config.file=/etc/prometheus/prometheus.yml'
   - '--storage.tsdb.path=/prometheus'
   - '--web.console.libraries=/etc/prometheus/console_libraries'
   - '--web.console.templates=/etc/prometheus/consoles'
   - '--web.enable-lifecycle'
  ports:
   - 9090:9090
  expose:
   - 9090
  networks:
   - monitoring

 grafana:
  image: grafana/grafana:latest
  container_name: grafana
  volumes:
   - ./grafana_data:/var/lib/grafana
  ports:
   - 3000:3000
  restart: unless-stopped
  networks:
   - monitoring

 flask-app:
  build: .
  container_name: flask-app
  ports:
   - 5000:5000
  restart: unless-stopped
  networks:
   - monitoring